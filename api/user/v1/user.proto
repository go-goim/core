syntax = "proto3";

package api.user.v1;
option go_package = "api/user/v1;v1";

import "validate/validate.proto";

enum LoginStatus {
  LOGIN = 0;
  ALREADY_LOGIN = 1;
  LOGOUT = 2;
}

message User {
  string uid = 1;
  string name = 2;
  string email = 3;
  string phone = 4;
  string avatar = 5;
  string agent_id = 6;
  // 0: login, need connect to push server
  // 1: login, no need connect to push server
  LoginStatus login_status = 7;
}

message UserList {
  repeated User users = 1;
}

message GetUserRequest {
  string uid = 1 [(validate.rules).string = {min_len: 20, max_len: 24}];
}

message GetUserResponse {
  User user = 1;
}

service UserService {
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
}

message UserLoginRequest {
  oneof user {
    option (validate.required) = true;
    string email = 1 [(validate.rules).string.email = true];
    string phone = 2 [(validate.rules).string.pattern = "^1[3-9]\\d{9}$"];
  }

  string password = 3;
  // 0: try login , do nothing if already login
  // 1: force login , logout if already login
  LoginType login_type = 4;
}

enum LoginType {
  LOGIN_TYPE_TRY = 0;
  LOGIN_TYPE_FORCE = 1;
}