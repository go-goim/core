// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: api/user/friend/v1/friend.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	response "github.com/yusank/goim/api/transport/response"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FriendStatus int32

const (
	// Friend as default status
	FriendStatus_FRIEND FriendStatus = 0
	// Stranger when delete friend
	FriendStatus_STRANGER FriendStatus = 1
	// Blocked when block friend
	FriendStatus_BLOCKED FriendStatus = 2
	// Unblock when unblock friend
	// unblock status won't be in database only use when update friend status
	FriendStatus_UNBLOCKED FriendStatus = 3
)

// Enum value maps for FriendStatus.
var (
	FriendStatus_name = map[int32]string{
		0: "FRIEND",
		1: "STRANGER",
		2: "BLOCKED",
		3: "UNBLOCKED",
	}
	FriendStatus_value = map[string]int32{
		"FRIEND":    0,
		"STRANGER":  1,
		"BLOCKED":   2,
		"UNBLOCKED": 3,
	}
)

func (x FriendStatus) Enum() *FriendStatus {
	p := new(FriendStatus)
	*p = x
	return p
}

func (x FriendStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_user_friend_v1_friend_proto_enumTypes[0].Descriptor()
}

func (FriendStatus) Type() protoreflect.EnumType {
	return &file_api_user_friend_v1_friend_proto_enumTypes[0]
}

func (x FriendStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendStatus.Descriptor instead.
func (FriendStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{0}
}

type FriendRequestStatus int32

const (
	// Friend request as default status
	FriendRequestStatus_REQUESTED FriendRequestStatus = 0
	// Friend request as accepted
	FriendRequestStatus_ACCEPTED FriendRequestStatus = 1
	// Friend request as rejected
	FriendRequestStatus_REJECTED FriendRequestStatus = 2
)

// Enum value maps for FriendRequestStatus.
var (
	FriendRequestStatus_name = map[int32]string{
		0: "REQUESTED",
		1: "ACCEPTED",
		2: "REJECTED",
	}
	FriendRequestStatus_value = map[string]int32{
		"REQUESTED": 0,
		"ACCEPTED":  1,
		"REJECTED":  2,
	}
)

func (x FriendRequestStatus) Enum() *FriendRequestStatus {
	p := new(FriendRequestStatus)
	*p = x
	return p
}

func (x FriendRequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendRequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_user_friend_v1_friend_proto_enumTypes[1].Descriptor()
}

func (FriendRequestStatus) Type() protoreflect.EnumType {
	return &file_api_user_friend_v1_friend_proto_enumTypes[1]
}

func (x FriendRequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendRequestStatus.Descriptor instead.
func (FriendRequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{1}
}

type AddFriendStatus int32

const (
	AddFriendStatus_SEND_REQUEST_SUCCESS AddFriendStatus = 0
	AddFriendStatus_ALREADY_SENT_REQUEST AddFriendStatus = 1
	AddFriendStatus_ADD_FRIEND_SUCCESS   AddFriendStatus = 2
	AddFriendStatus_BLOCKED_BY_ME        AddFriendStatus = 3
	AddFriendStatus_BLOCKED_BY_FRIEND    AddFriendStatus = 4
)

// Enum value maps for AddFriendStatus.
var (
	AddFriendStatus_name = map[int32]string{
		0: "SEND_REQUEST_SUCCESS",
		1: "ALREADY_SENT_REQUEST",
		2: "ADD_FRIEND_SUCCESS",
		3: "BLOCKED_BY_ME",
		4: "BLOCKED_BY_FRIEND",
	}
	AddFriendStatus_value = map[string]int32{
		"SEND_REQUEST_SUCCESS": 0,
		"ALREADY_SENT_REQUEST": 1,
		"ADD_FRIEND_SUCCESS":   2,
		"BLOCKED_BY_ME":        3,
		"BLOCKED_BY_FRIEND":    4,
	}
)

func (x AddFriendStatus) Enum() *AddFriendStatus {
	p := new(AddFriendStatus)
	*p = x
	return p
}

func (x AddFriendStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddFriendStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_user_friend_v1_friend_proto_enumTypes[2].Descriptor()
}

func (AddFriendStatus) Type() protoreflect.EnumType {
	return &file_api_user_friend_v1_friend_proto_enumTypes[2]
}

func (x AddFriendStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddFriendStatus.Descriptor instead.
func (AddFriendStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{2}
}

type ConfirmFriendRequestAction int32

const (
	ConfirmFriendRequestAction_ACCEPT ConfirmFriendRequestAction = 0 // accept friend request
	ConfirmFriendRequestAction_REJECT ConfirmFriendRequestAction = 1 // reject friend request
)

// Enum value maps for ConfirmFriendRequestAction.
var (
	ConfirmFriendRequestAction_name = map[int32]string{
		0: "ACCEPT",
		1: "REJECT",
	}
	ConfirmFriendRequestAction_value = map[string]int32{
		"ACCEPT": 0,
		"REJECT": 1,
	}
)

func (x ConfirmFriendRequestAction) Enum() *ConfirmFriendRequestAction {
	p := new(ConfirmFriendRequestAction)
	*p = x
	return p
}

func (x ConfirmFriendRequestAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfirmFriendRequestAction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_user_friend_v1_friend_proto_enumTypes[3].Descriptor()
}

func (ConfirmFriendRequestAction) Type() protoreflect.EnumType {
	return &file_api_user_friend_v1_friend_proto_enumTypes[3]
}

func (x ConfirmFriendRequestAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfirmFriendRequestAction.Descriptor instead.
func (ConfirmFriendRequestAction) EnumDescriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{3}
}

type Friend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string       `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FriendUid    string       `protobuf:"bytes,2,opt,name=friend_uid,json=friendUid,proto3" json:"friend_uid,omitempty"`
	FriendName   string       `protobuf:"bytes,3,opt,name=friend_name,json=friendName,proto3" json:"friend_name,omitempty"`
	FriendAvatar string       `protobuf:"bytes,4,opt,name=friend_avatar,json=friendAvatar,proto3" json:"friend_avatar,omitempty"`
	Status       FriendStatus `protobuf:"varint,5,opt,name=status,proto3,enum=api.user.v1.FriendStatus" json:"status,omitempty"`
	CreatedAt    int64        `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    int64        `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Friend) Reset() {
	*x = Friend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friend) ProtoMessage() {}

func (x *Friend) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friend.ProtoReflect.Descriptor instead.
func (*Friend) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{0}
}

func (x *Friend) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Friend) GetFriendUid() string {
	if x != nil {
		return x.FriendUid
	}
	return ""
}

func (x *Friend) GetFriendName() string {
	if x != nil {
		return x.FriendName
	}
	return ""
}

func (x *Friend) GetFriendAvatar() string {
	if x != nil {
		return x.FriendAvatar
	}
	return ""
}

func (x *Friend) GetStatus() FriendStatus {
	if x != nil {
		return x.Status
	}
	return FriendStatus_FRIEND
}

func (x *Friend) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Friend) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type UpdateFriendStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info   *BaseFriendRequest `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Status FriendStatus       `protobuf:"varint,2,opt,name=status,proto3,enum=api.user.v1.FriendStatus" json:"status,omitempty"`
}

func (x *UpdateFriendStatusRequest) Reset() {
	*x = UpdateFriendStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriendStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendStatusRequest) ProtoMessage() {}

func (x *UpdateFriendStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateFriendStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateFriendStatusRequest) GetInfo() *BaseFriendRequest {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *UpdateFriendStatusRequest) GetStatus() FriendStatus {
	if x != nil {
		return x.Status
	}
	return FriendStatus_FRIEND
}

type GetFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *response.BaseResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Friend   *Friend                `protobuf:"bytes,2,opt,name=friend,proto3" json:"friend,omitempty"`
}

func (x *GetFriendResponse) Reset() {
	*x = GetFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendResponse) ProtoMessage() {}

func (x *GetFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendResponse.ProtoReflect.Descriptor instead.
func (*GetFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{2}
}

func (x *GetFriendResponse) GetResponse() *response.BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetFriendResponse) GetFriend() *Friend {
	if x != nil {
		return x.Friend
	}
	return nil
}

type QueryFriendListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *QueryFriendListRequest) Reset() {
	*x = QueryFriendListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFriendListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFriendListRequest) ProtoMessage() {}

func (x *QueryFriendListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFriendListRequest.ProtoReflect.Descriptor instead.
func (*QueryFriendListRequest) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{3}
}

func (x *QueryFriendListRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type QueryFriendListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response   *response.BaseResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	FriendList []*Friend              `protobuf:"bytes,2,rep,name=friend_list,json=friendList,proto3" json:"friend_list,omitempty"`
}

func (x *QueryFriendListResponse) Reset() {
	*x = QueryFriendListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFriendListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFriendListResponse) ProtoMessage() {}

func (x *QueryFriendListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFriendListResponse.ProtoReflect.Descriptor instead.
func (*QueryFriendListResponse) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{4}
}

func (x *QueryFriendListResponse) GetResponse() *response.BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *QueryFriendListResponse) GetFriendList() []*Friend {
	if x != nil {
		return x.FriendList
	}
	return nil
}

// FriendRequest is the request data for adding friend
type FriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string              `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FriendUid string              `protobuf:"bytes,2,opt,name=friend_uid,json=friendUid,proto3" json:"friend_uid,omitempty"`
	Status    FriendRequestStatus `protobuf:"varint,3,opt,name=status,proto3,enum=api.user.v1.FriendRequestStatus" json:"status,omitempty"`
	CreatedAt int64               `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64               `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// friend info for view
	FriendName   string `protobuf:"bytes,6,opt,name=friend_name,json=friendName,proto3" json:"friend_name,omitempty"`
	FriendAvatar string `protobuf:"bytes,7,opt,name=friend_avatar,json=friendAvatar,proto3" json:"friend_avatar,omitempty"`
}

func (x *FriendRequest) Reset() {
	*x = FriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequest) ProtoMessage() {}

func (x *FriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequest.ProtoReflect.Descriptor instead.
func (*FriendRequest) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{5}
}

func (x *FriendRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *FriendRequest) GetFriendUid() string {
	if x != nil {
		return x.FriendUid
	}
	return ""
}

func (x *FriendRequest) GetStatus() FriendRequestStatus {
	if x != nil {
		return x.Status
	}
	return FriendRequestStatus_REQUESTED
}

func (x *FriendRequest) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FriendRequest) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *FriendRequest) GetFriendName() string {
	if x != nil {
		return x.FriendName
	}
	return ""
}

func (x *FriendRequest) GetFriendAvatar() string {
	if x != nil {
		return x.FriendAvatar
	}
	return ""
}

type AddFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// Types that are assignable to FriendInfo:
	//	*AddFriendRequest_Email
	//	*AddFriendRequest_Phone
	FriendInfo isAddFriendRequest_FriendInfo `protobuf_oneof:"friend_info"`
}

func (x *AddFriendRequest) Reset() {
	*x = AddFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendRequest) ProtoMessage() {}

func (x *AddFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendRequest.ProtoReflect.Descriptor instead.
func (*AddFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{6}
}

func (x *AddFriendRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (m *AddFriendRequest) GetFriendInfo() isAddFriendRequest_FriendInfo {
	if m != nil {
		return m.FriendInfo
	}
	return nil
}

func (x *AddFriendRequest) GetEmail() string {
	if x, ok := x.GetFriendInfo().(*AddFriendRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *AddFriendRequest) GetPhone() string {
	if x, ok := x.GetFriendInfo().(*AddFriendRequest_Phone); ok {
		return x.Phone
	}
	return ""
}

type isAddFriendRequest_FriendInfo interface {
	isAddFriendRequest_FriendInfo()
}

type AddFriendRequest_Email struct {
	Email string `protobuf:"bytes,2,opt,name=email,proto3,oneof"`
}

type AddFriendRequest_Phone struct {
	Phone string `protobuf:"bytes,3,opt,name=phone,proto3,oneof"`
}

func (*AddFriendRequest_Email) isAddFriendRequest_FriendInfo() {}

func (*AddFriendRequest_Phone) isAddFriendRequest_FriendInfo() {}

type BaseFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FriendUid string `protobuf:"bytes,2,opt,name=friend_uid,json=friendUid,proto3" json:"friend_uid,omitempty"`
}

func (x *BaseFriendRequest) Reset() {
	*x = BaseFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseFriendRequest) ProtoMessage() {}

func (x *BaseFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseFriendRequest.ProtoReflect.Descriptor instead.
func (*BaseFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{7}
}

func (x *BaseFriendRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *BaseFriendRequest) GetFriendUid() string {
	if x != nil {
		return x.FriendUid
	}
	return ""
}

type AddFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *response.BaseResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Result   *AddFriendResult       `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddFriendResponse) Reset() {
	*x = AddFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendResponse) ProtoMessage() {}

func (x *AddFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendResponse.ProtoReflect.Descriptor instead.
func (*AddFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{8}
}

func (x *AddFriendResponse) GetResponse() *response.BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *AddFriendResponse) GetResult() *AddFriendResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddFriendResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        AddFriendStatus `protobuf:"varint,1,opt,name=status,proto3,enum=api.user.v1.AddFriendStatus" json:"status,omitempty"`
	FriendRequest *FriendRequest  `protobuf:"bytes,2,opt,name=friend_request,json=friendRequest,proto3" json:"friend_request,omitempty"`
}

func (x *AddFriendResult) Reset() {
	*x = AddFriendResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendResult) ProtoMessage() {}

func (x *AddFriendResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendResult.ProtoReflect.Descriptor instead.
func (*AddFriendResult) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{9}
}

func (x *AddFriendResult) GetStatus() AddFriendStatus {
	if x != nil {
		return x.Status
	}
	return AddFriendStatus_SEND_REQUEST_SUCCESS
}

func (x *AddFriendResult) GetFriendRequest() *FriendRequest {
	if x != nil {
		return x.FriendRequest
	}
	return nil
}

type ConfirmFriendRequestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string                     `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FriendRequestId int64                      `protobuf:"varint,2,opt,name=friend_request_id,json=friendRequestId,proto3" json:"friend_request_id,omitempty"`
	Action          ConfirmFriendRequestAction `protobuf:"varint,3,opt,name=action,proto3,enum=api.user.v1.ConfirmFriendRequestAction" json:"action,omitempty"`
}

func (x *ConfirmFriendRequestReq) Reset() {
	*x = ConfirmFriendRequestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmFriendRequestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmFriendRequestReq) ProtoMessage() {}

func (x *ConfirmFriendRequestReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmFriendRequestReq.ProtoReflect.Descriptor instead.
func (*ConfirmFriendRequestReq) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{10}
}

func (x *ConfirmFriendRequestReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ConfirmFriendRequestReq) GetFriendRequestId() int64 {
	if x != nil {
		return x.FriendRequestId
	}
	return 0
}

func (x *ConfirmFriendRequestReq) GetAction() ConfirmFriendRequestAction {
	if x != nil {
		return x.Action
	}
	return ConfirmFriendRequestAction_ACCEPT
}

type GetFriendRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response      *response.BaseResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	FriendRequest *FriendRequest         `protobuf:"bytes,2,opt,name=friend_request,json=friendRequest,proto3" json:"friend_request,omitempty"`
}

func (x *GetFriendRequestResponse) Reset() {
	*x = GetFriendRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestResponse) ProtoMessage() {}

func (x *GetFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*GetFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{11}
}

func (x *GetFriendRequestResponse) GetResponse() *response.BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetFriendRequestResponse) GetFriendRequest() *FriendRequest {
	if x != nil {
		return x.FriendRequest
	}
	return nil
}

type QueryFriendRequestListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *QueryFriendRequestListRequest) Reset() {
	*x = QueryFriendRequestListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFriendRequestListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFriendRequestListRequest) ProtoMessage() {}

func (x *QueryFriendRequestListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFriendRequestListRequest.ProtoReflect.Descriptor instead.
func (*QueryFriendRequestListRequest) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{12}
}

func (x *QueryFriendRequestListRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type QueryFriendRequestListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response          *response.BaseResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	FriendRequestList []*FriendRequest       `protobuf:"bytes,2,rep,name=friend_request_list,json=friendRequestList,proto3" json:"friend_request_list,omitempty"`
}

func (x *QueryFriendRequestListResponse) Reset() {
	*x = QueryFriendRequestListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_friend_v1_friend_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFriendRequestListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFriendRequestListResponse) ProtoMessage() {}

func (x *QueryFriendRequestListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_friend_v1_friend_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFriendRequestListResponse.ProtoReflect.Descriptor instead.
func (*QueryFriendRequestListResponse) Descriptor() ([]byte, []int) {
	return file_api_user_friend_v1_friend_proto_rawDescGZIP(), []int{13}
}

func (x *QueryFriendRequestListResponse) GetResponse() *response.BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *QueryFriendRequestListResponse) GetFriendRequestList() []*FriendRequest {
	if x != nil {
		return x.FriendRequestList
	}
	return nil
}

var File_api_user_friend_v1_friend_proto protoreflect.FileDescriptor

var file_api_user_friend_v1_friend_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x01, 0x0a, 0x06, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x31, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x82, 0x01,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x35, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x14, 0x18, 0x18, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x91,
	0x01, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xfe, 0x01, 0x0a, 0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x22, 0x92, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x14, 0x18, 0x18,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x60, 0x01, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x11, 0x72, 0x0f, 0x32, 0x0d, 0x5e, 0x31,
	0x5b, 0x33, 0x2d, 0x39, 0x5d, 0x5c, 0x64, 0x7b, 0x39, 0x7d, 0x24, 0x48, 0x00, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x42, 0x12, 0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x5a, 0x0a, 0x11, 0x42, 0x61, 0x73, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x14, 0x18, 0x18, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0a, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x14, 0x18, 0x18, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x55, 0x69, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0e,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xb6, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x14, 0x18, 0x18, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x11, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x49, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x1d, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x14, 0x18, 0x18, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x1e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x13, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x2a, 0x44, 0x0a, 0x0c, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x49,
	0x45, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x52, 0x41, 0x4e, 0x47, 0x45,
	0x52, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x03, 0x2a,
	0x40, 0x0a, 0x13, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10,
	0x02, 0x2a, 0x87, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12,
	0x18, 0x0a, 0x14, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x53, 0x45, 0x4e, 0x54, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x44, 0x44,
	0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x02, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f,
	0x4d, 0x45, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x5f,
	0x42, 0x59, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x10, 0x04, 0x2a, 0x34, 0x0a, 0x1a, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x43,
	0x45, 0x50, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x10,
	0x01, 0x32, 0xee, 0x05, 0x0a, 0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x62, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71,
	0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x62, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x17, 0x5a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_user_friend_v1_friend_proto_rawDescOnce sync.Once
	file_api_user_friend_v1_friend_proto_rawDescData = file_api_user_friend_v1_friend_proto_rawDesc
)

func file_api_user_friend_v1_friend_proto_rawDescGZIP() []byte {
	file_api_user_friend_v1_friend_proto_rawDescOnce.Do(func() {
		file_api_user_friend_v1_friend_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_user_friend_v1_friend_proto_rawDescData)
	})
	return file_api_user_friend_v1_friend_proto_rawDescData
}

var file_api_user_friend_v1_friend_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_user_friend_v1_friend_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_user_friend_v1_friend_proto_goTypes = []interface{}{
	(FriendStatus)(0),                      // 0: api.user.v1.FriendStatus
	(FriendRequestStatus)(0),               // 1: api.user.v1.FriendRequestStatus
	(AddFriendStatus)(0),                   // 2: api.user.v1.AddFriendStatus
	(ConfirmFriendRequestAction)(0),        // 3: api.user.v1.ConfirmFriendRequestAction
	(*Friend)(nil),                         // 4: api.user.v1.Friend
	(*UpdateFriendStatusRequest)(nil),      // 5: api.user.v1.UpdateFriendStatusRequest
	(*GetFriendResponse)(nil),              // 6: api.user.v1.GetFriendResponse
	(*QueryFriendListRequest)(nil),         // 7: api.user.v1.QueryFriendListRequest
	(*QueryFriendListResponse)(nil),        // 8: api.user.v1.QueryFriendListResponse
	(*FriendRequest)(nil),                  // 9: api.user.v1.FriendRequest
	(*AddFriendRequest)(nil),               // 10: api.user.v1.AddFriendRequest
	(*BaseFriendRequest)(nil),              // 11: api.user.v1.BaseFriendRequest
	(*AddFriendResponse)(nil),              // 12: api.user.v1.AddFriendResponse
	(*AddFriendResult)(nil),                // 13: api.user.v1.AddFriendResult
	(*ConfirmFriendRequestReq)(nil),        // 14: api.user.v1.ConfirmFriendRequestReq
	(*GetFriendRequestResponse)(nil),       // 15: api.user.v1.GetFriendRequestResponse
	(*QueryFriendRequestListRequest)(nil),  // 16: api.user.v1.QueryFriendRequestListRequest
	(*QueryFriendRequestListResponse)(nil), // 17: api.user.v1.QueryFriendRequestListResponse
	(*response.BaseResponse)(nil),          // 18: api.transport.response.BaseResponse
}
var file_api_user_friend_v1_friend_proto_depIdxs = []int32{
	0,  // 0: api.user.v1.Friend.status:type_name -> api.user.v1.FriendStatus
	11, // 1: api.user.v1.UpdateFriendStatusRequest.info:type_name -> api.user.v1.BaseFriendRequest
	0,  // 2: api.user.v1.UpdateFriendStatusRequest.status:type_name -> api.user.v1.FriendStatus
	18, // 3: api.user.v1.GetFriendResponse.response:type_name -> api.transport.response.BaseResponse
	4,  // 4: api.user.v1.GetFriendResponse.friend:type_name -> api.user.v1.Friend
	18, // 5: api.user.v1.QueryFriendListResponse.response:type_name -> api.transport.response.BaseResponse
	4,  // 6: api.user.v1.QueryFriendListResponse.friend_list:type_name -> api.user.v1.Friend
	1,  // 7: api.user.v1.FriendRequest.status:type_name -> api.user.v1.FriendRequestStatus
	18, // 8: api.user.v1.AddFriendResponse.response:type_name -> api.transport.response.BaseResponse
	13, // 9: api.user.v1.AddFriendResponse.result:type_name -> api.user.v1.AddFriendResult
	2,  // 10: api.user.v1.AddFriendResult.status:type_name -> api.user.v1.AddFriendStatus
	9,  // 11: api.user.v1.AddFriendResult.friend_request:type_name -> api.user.v1.FriendRequest
	3,  // 12: api.user.v1.ConfirmFriendRequestReq.action:type_name -> api.user.v1.ConfirmFriendRequestAction
	18, // 13: api.user.v1.GetFriendRequestResponse.response:type_name -> api.transport.response.BaseResponse
	9,  // 14: api.user.v1.GetFriendRequestResponse.friend_request:type_name -> api.user.v1.FriendRequest
	18, // 15: api.user.v1.QueryFriendRequestListResponse.response:type_name -> api.transport.response.BaseResponse
	9,  // 16: api.user.v1.QueryFriendRequestListResponse.friend_request_list:type_name -> api.user.v1.FriendRequest
	10, // 17: api.user.v1.FriendService.AddFriend:input_type -> api.user.v1.AddFriendRequest
	14, // 18: api.user.v1.FriendService.ConfirmFriendRequest:input_type -> api.user.v1.ConfirmFriendRequestReq
	11, // 19: api.user.v1.FriendService.GetFriendRequest:input_type -> api.user.v1.BaseFriendRequest
	16, // 20: api.user.v1.FriendService.QueryFriendRequestList:input_type -> api.user.v1.QueryFriendRequestListRequest
	5,  // 21: api.user.v1.FriendService.UpdateFriendStatus:input_type -> api.user.v1.UpdateFriendStatusRequest
	11, // 22: api.user.v1.FriendService.IsFriend:input_type -> api.user.v1.BaseFriendRequest
	11, // 23: api.user.v1.FriendService.GetFriend:input_type -> api.user.v1.BaseFriendRequest
	7,  // 24: api.user.v1.FriendService.QueryFriendList:input_type -> api.user.v1.QueryFriendListRequest
	12, // 25: api.user.v1.FriendService.AddFriend:output_type -> api.user.v1.AddFriendResponse
	18, // 26: api.user.v1.FriendService.ConfirmFriendRequest:output_type -> api.transport.response.BaseResponse
	15, // 27: api.user.v1.FriendService.GetFriendRequest:output_type -> api.user.v1.GetFriendRequestResponse
	17, // 28: api.user.v1.FriendService.QueryFriendRequestList:output_type -> api.user.v1.QueryFriendRequestListResponse
	18, // 29: api.user.v1.FriendService.UpdateFriendStatus:output_type -> api.transport.response.BaseResponse
	18, // 30: api.user.v1.FriendService.IsFriend:output_type -> api.transport.response.BaseResponse
	6,  // 31: api.user.v1.FriendService.GetFriend:output_type -> api.user.v1.GetFriendResponse
	8,  // 32: api.user.v1.FriendService.QueryFriendList:output_type -> api.user.v1.QueryFriendListResponse
	25, // [25:33] is the sub-list for method output_type
	17, // [17:25] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_api_user_friend_v1_friend_proto_init() }
func file_api_user_friend_v1_friend_proto_init() {
	if File_api_user_friend_v1_friend_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_user_friend_v1_friend_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Friend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_friend_v1_friend_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriendStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_friend_v1_friend_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_friend_v1_friend_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFriendListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_friend_v1_friend_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFriendListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_friend_v1_friend_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_friend_v1_friend_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_friend_v1_friend_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_friend_v1_friend_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_friend_v1_friend_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_friend_v1_friend_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmFriendRequestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_friend_v1_friend_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_friend_v1_friend_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFriendRequestListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_friend_v1_friend_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFriendRequestListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_user_friend_v1_friend_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*AddFriendRequest_Email)(nil),
		(*AddFriendRequest_Phone)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_user_friend_v1_friend_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_user_friend_v1_friend_proto_goTypes,
		DependencyIndexes: file_api_user_friend_v1_friend_proto_depIdxs,
		EnumInfos:         file_api_user_friend_v1_friend_proto_enumTypes,
		MessageInfos:      file_api_user_friend_v1_friend_proto_msgTypes,
	}.Build()
	File_api_user_friend_v1_friend_proto = out.File
	file_api_user_friend_v1_friend_proto_rawDesc = nil
	file_api_user_friend_v1_friend_proto_goTypes = nil
	file_api_user_friend_v1_friend_proto_depIdxs = nil
}
