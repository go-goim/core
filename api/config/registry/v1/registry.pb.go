// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: api/config/registry/v1/registry.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegistryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr   []string `protobuf:"bytes,1,rep,name=addr,proto3" json:"addr,omitempty"`
	Scheme string   `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
	// range [10ms, 10s]
	DialTimeoutSec          *durationpb.Duration `protobuf:"bytes,3,opt,name=dial_timeout_sec,json=dialTimeoutSec,proto3" json:"dial_timeout_sec,omitempty"`
	DialKeepAliveTimeSec    *durationpb.Duration `protobuf:"bytes,4,opt,name=dial_keep_alive_time_sec,json=dialKeepAliveTimeSec,proto3" json:"dial_keep_alive_time_sec,omitempty"`
	DialKeepAliveTimeoutSec *durationpb.Duration `protobuf:"bytes,5,opt,name=dial_keep_alive_timeout_sec,json=dialKeepAliveTimeoutSec,proto3" json:"dial_keep_alive_timeout_sec,omitempty"`
}

func (x *RegistryInfo) Reset() {
	*x = RegistryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_config_registry_v1_registry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryInfo) ProtoMessage() {}

func (x *RegistryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_config_registry_v1_registry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryInfo.ProtoReflect.Descriptor instead.
func (*RegistryInfo) Descriptor() ([]byte, []int) {
	return file_api_config_registry_v1_registry_proto_rawDescGZIP(), []int{0}
}

func (x *RegistryInfo) GetAddr() []string {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *RegistryInfo) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *RegistryInfo) GetDialTimeoutSec() *durationpb.Duration {
	if x != nil {
		return x.DialTimeoutSec
	}
	return nil
}

func (x *RegistryInfo) GetDialKeepAliveTimeSec() *durationpb.Duration {
	if x != nil {
		return x.DialKeepAliveTimeSec
	}
	return nil
}

func (x *RegistryInfo) GetDialKeepAliveTimeoutSec() *durationpb.Duration {
	if x != nil {
		return x.DialKeepAliveTimeoutSec
	}
	return nil
}

type ConfigCenterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PathPrefix is prefix key of config center.
	PathPrefix string `protobuf:"bytes,1,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	// Paths is config paths of config center.
	Paths []string `protobuf:"bytes,2,rep,name=paths,proto3" json:"paths,omitempty"`
	// Format is config format of config center.
	Format string `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
}

func (x *ConfigCenterInfo) Reset() {
	*x = ConfigCenterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_config_registry_v1_registry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigCenterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigCenterInfo) ProtoMessage() {}

func (x *ConfigCenterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_config_registry_v1_registry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigCenterInfo.ProtoReflect.Descriptor instead.
func (*ConfigCenterInfo) Descriptor() ([]byte, []int) {
	return file_api_config_registry_v1_registry_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigCenterInfo) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *ConfigCenterInfo) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *ConfigCenterInfo) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type Registry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigCenter *ConfigCenterInfo `protobuf:"bytes,1,opt,name=config_center,json=configCenter,proto3" json:"config_center,omitempty"`
	// Types that are assignable to Reg:
	//	*Registry_Consul
	//	*Registry_Etcd
	Reg isRegistry_Reg `protobuf_oneof:"reg"`
}

func (x *Registry) Reset() {
	*x = Registry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_config_registry_v1_registry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Registry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry) ProtoMessage() {}

func (x *Registry) ProtoReflect() protoreflect.Message {
	mi := &file_api_config_registry_v1_registry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry.ProtoReflect.Descriptor instead.
func (*Registry) Descriptor() ([]byte, []int) {
	return file_api_config_registry_v1_registry_proto_rawDescGZIP(), []int{2}
}

func (x *Registry) GetConfigCenter() *ConfigCenterInfo {
	if x != nil {
		return x.ConfigCenter
	}
	return nil
}

func (m *Registry) GetReg() isRegistry_Reg {
	if m != nil {
		return m.Reg
	}
	return nil
}

func (x *Registry) GetConsul() *RegistryInfo {
	if x, ok := x.GetReg().(*Registry_Consul); ok {
		return x.Consul
	}
	return nil
}

func (x *Registry) GetEtcd() *RegistryInfo {
	if x, ok := x.GetReg().(*Registry_Etcd); ok {
		return x.Etcd
	}
	return nil
}

type isRegistry_Reg interface {
	isRegistry_Reg()
}

type Registry_Consul struct {
	Consul *RegistryInfo `protobuf:"bytes,2,opt,name=consul,proto3,oneof"`
}

type Registry_Etcd struct {
	Etcd *RegistryInfo `protobuf:"bytes,3,opt,name=etcd,proto3,oneof"`
}

func (*Registry_Consul) isRegistry_Reg() {}

func (*Registry_Etcd) isRegistry_Reg() {}

var File_api_config_registry_v1_registry_proto protoreflect.FileDescriptor

var file_api_config_registry_v1_registry_proto_rawDesc = []byte{
	0x0a, 0x25, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08,
	0x01, 0x18, 0x01, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x72, 0x0c,
	0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x64, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0xaa, 0x01,
	0x0a, 0x22, 0x02, 0x08, 0x0a, 0x32, 0x04, 0x10, 0xc0, 0x84, 0x3d, 0x52, 0x0e, 0x64, 0x69, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x12, 0x51, 0x0a, 0x18, 0x64,
	0x69, 0x61, 0x6c, 0x5f, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x64, 0x69, 0x61, 0x6c, 0x4b, 0x65,
	0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x57,
	0x0a, 0x1b, 0x64, 0x69, 0x61, 0x6c, 0x5f, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x6c, 0x69, 0x76,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17,
	0x64, 0x69, 0x61, 0x6c, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x22, 0x7e, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1e, 0x0a, 0x05,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x92, 0x01, 0x02, 0x18, 0x01, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x29, 0x0a, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xfa, 0x42,
	0x0e, 0x72, 0x0c, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x52,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x12, 0x4d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6c, 0x12, 0x3a, 0x0a, 0x04, 0x65, 0x74, 0x63, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x65, 0x74, 0x63, 0x64, 0x42,
	0x05, 0x0a, 0x03, 0x72, 0x65, 0x67, 0x42, 0x1b, 0x5a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_config_registry_v1_registry_proto_rawDescOnce sync.Once
	file_api_config_registry_v1_registry_proto_rawDescData = file_api_config_registry_v1_registry_proto_rawDesc
)

func file_api_config_registry_v1_registry_proto_rawDescGZIP() []byte {
	file_api_config_registry_v1_registry_proto_rawDescOnce.Do(func() {
		file_api_config_registry_v1_registry_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_config_registry_v1_registry_proto_rawDescData)
	})
	return file_api_config_registry_v1_registry_proto_rawDescData
}

var file_api_config_registry_v1_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_config_registry_v1_registry_proto_goTypes = []interface{}{
	(*RegistryInfo)(nil),        // 0: api.config.registry.v1.RegistryInfo
	(*ConfigCenterInfo)(nil),    // 1: api.config.registry.v1.ConfigCenterInfo
	(*Registry)(nil),            // 2: api.config.registry.v1.Registry
	(*durationpb.Duration)(nil), // 3: google.protobuf.Duration
}
var file_api_config_registry_v1_registry_proto_depIdxs = []int32{
	3, // 0: api.config.registry.v1.RegistryInfo.dial_timeout_sec:type_name -> google.protobuf.Duration
	3, // 1: api.config.registry.v1.RegistryInfo.dial_keep_alive_time_sec:type_name -> google.protobuf.Duration
	3, // 2: api.config.registry.v1.RegistryInfo.dial_keep_alive_timeout_sec:type_name -> google.protobuf.Duration
	1, // 3: api.config.registry.v1.Registry.config_center:type_name -> api.config.registry.v1.ConfigCenterInfo
	0, // 4: api.config.registry.v1.Registry.consul:type_name -> api.config.registry.v1.RegistryInfo
	0, // 5: api.config.registry.v1.Registry.etcd:type_name -> api.config.registry.v1.RegistryInfo
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_api_config_registry_v1_registry_proto_init() }
func file_api_config_registry_v1_registry_proto_init() {
	if File_api_config_registry_v1_registry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_config_registry_v1_registry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_config_registry_v1_registry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigCenterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_config_registry_v1_registry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Registry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_config_registry_v1_registry_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Registry_Consul)(nil),
		(*Registry_Etcd)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_config_registry_v1_registry_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_config_registry_v1_registry_proto_goTypes,
		DependencyIndexes: file_api_config_registry_v1_registry_proto_depIdxs,
		MessageInfos:      file_api_config_registry_v1_registry_proto_msgTypes,
	}.Build()
	File_api_config_registry_v1_registry_proto = out.File
	file_api_config_registry_v1_registry_proto_rawDesc = nil
	file_api_config_registry_v1_registry_proto_goTypes = nil
	file_api_config_registry_v1_registry_proto_depIdxs = nil
}
