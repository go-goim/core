syntax = "proto3";

package api.message.v1;
option go_package = "api/message/v1;v1";

enum MessageContentType {
  Text = 0;
  Image = 1;
  Voice = 2;
  UNKNOWN = -1;
}

// Message receive data from gateway
message Message {
  string from_user = 1;
  string to_user = 2;
  MessageContentType content_type = 3;
  string content = 4;
}

enum PushMessageType {
  // user to user
  ToUser = 0;
  // user to group
  ToGroup = 1;
  // global broadcast
  ToChannel = 2;
}

// PushMessage use for push a message to persistence connection server
message PushMessageReq {
  string from_user = 1;
  string to_user = 2;
  string agent_id = 3;
  PushMessageType push_message_type = 4;
  MessageContentType content_type = 5;
  string content = 6;
}

enum PushMessageRespStatus {
  OK = 0;
  ConnectionNotFound = 1;
  ConnectionLost = 2;
  ConnectionTimeout = 3;
  WriteTimeout=4;
  Unknown=5;
}


message PushMessageResp {
  PushMessageRespStatus status = 1;
  string reason =2;
}

service PushMessager {
  rpc PushMessage(PushMessageReq) returns (PushMessageResp);
}

message MqMessage {
  string from_user = 1;
  string to_user = 2;
  PushMessageType push_message_type = 3;
  MessageContentType content_type = 4;
  string content = 5;
  string topic = 6;
  int64 delay_sec = 7;
}